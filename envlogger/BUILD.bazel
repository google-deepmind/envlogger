# Copyright 2025 DeepMind Technologies Limited..
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build targets for environment logger.
load("@rules_python//python:defs.bzl", "py_library")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "envlogger",
    srcs = ["__init__.py"],
    deps = [
        ":environment_logger",
        ":reader",
        ":step_data",
        "//envlogger/backends:backend_type",
        "//envlogger/backends:riegeli_backend_writer",
        "//envlogger/backends:schedulers",
        "//envlogger/proto:storage_py_pb2",
    ],
)

py_library(
    name = "environment_logger",
    srcs = ["environment_logger.py"],
    deps = [
        ":environment_wrapper",
        ":step_data",
        "//envlogger/backends:backend_type",
        "//envlogger/backends:backend_writer",
        "//envlogger/backends:in_memory_backend",
        "//envlogger/backends:riegeli_backend_writer",
        "//envlogger/converters:spec_codec",
    ],
)

py_test(
    name = "environment_logger_test",
    srcs = ["environment_logger_test.py"],
    deps = [
        ":environment_logger",
        ":reader",
        ":step_data",
        "//envlogger/backends:backend_writer",
        "//envlogger/backends:in_memory_backend",
        "//envlogger/backends:schedulers",
        "//envlogger/converters:codec",
        "//envlogger/converters:spec_codec",
        "//envlogger/proto:storage_py_pb2",
        "//envlogger/testing:catch_env",
        "@com_google_riegeli//python/riegeli",
    ],
)

py_library(
    name = "environment_wrapper",
    srcs = ["environment_wrapper.py"],
    deps = [
    ],
)

py_library(
    name = "reader",
    srcs = ["reader.py"],
    data = [
        "//envlogger/backends/python:episode_info.so",
        "//envlogger/backends/python:riegeli_dataset_reader.so",
    ],
    deps = [
        ":step_data",
        "//envlogger/backends:backend_reader",
        "//envlogger/backends:backend_type",
        "//envlogger/backends:in_memory_backend",
        "//envlogger/backends:riegeli_backend_reader",
        "//envlogger/converters:spec_codec",
    ],
)

py_library(
    name = "step_data",
    srcs = ["step_data.py"],
    deps = [
    ],
)
