# Copyright 2025 DeepMind Technologies Limited..
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default platform specific targets.

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "bundle",
    srcs = ["bundle.cc"],
    hdrs = ["bundle.h"],
    deps = ["@com_github_google_glog//:glog"],
)

cc_library(
    name = "filesystem",
    srcs = ["filesystem.cc"],
    hdrs = ["filesystem.h"],
    linkopts = ["-lstdc++fs"],
    deps = [
        "//envlogger/platform:status_macros",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "parse_text_proto",
    hdrs = ["parse_text_proto.h"],
    deps = ["@com_github_google_glog//:glog"],
)

cc_library(
    name = "proto_testutil",
    testonly = 1,
    hdrs = ["proto_testutil.h"],
    deps = [
        "@com_github_google_glog//:glog",
        "@com_google_googletest//:gtest",
    ],
)

cc_library(
    name = "riegeli_file_reader",
    hdrs = ["riegeli_file_reader.h"],
    deps = [
        ":filesystem",
        "@com_google_absl//absl/strings",
        "@com_google_riegeli//riegeli/bytes:fd_reader",
    ],
)

cc_library(
    name = "riegeli_file_writer",
    hdrs = ["riegeli_file_writer.h"],
    deps = [
        ":filesystem",
        "@com_google_absl//absl/strings",
        "@com_google_riegeli//riegeli/bytes:fd_writer",
    ],
)

cc_library(
    name = "source_location",
    hdrs = ["source_location.h"],
)

cc_library(
    name = "status_builder",
    srcs = ["status_builder.cc"],
    hdrs = ["status_builder.h"],
    deps = [
        ":source_location",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "status_macros",
    hdrs = ["status_macros.h"],
    deps = [
        ":status_builder",
        "@com_google_absl//absl/status",
    ],
)
